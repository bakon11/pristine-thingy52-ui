{"version":3,"sources":["themes/theme.ts","containers/NavBar/NavBar.tsx","containers/Home/Home.tsx","api/api.ts","containers/ViewDevice/ViewDevice.tsx","containers/ScanDevices/ScanDevices.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","NavBar","darkMode","useDarkMode","AppBar","Toolbar","Grid","container","alignContent","alignItems","justify","item","style","padding","to","Button","IconButton","onClick","toggle","value","Home","theme","CssBaseline","direction","Typography","thingyHTTPSapi","ThingyApi","transport","host","port","ViewDevice","useState","temp","setTemp","humid","setHumid","battery","setBattery","getSensorData","a","console","log","batteryResult","batteryDataResult","JSON","parse","tempResult","tempDataResult","humidResult","humidDataResult","useEffect","refreshSensors","setInterval","clearInterval","moment","unix","date","ms","format","sensor","toFixed","ScanDevices","foundDevices","setFoundDevices","startScanDevices","startScan","scanResult","map","devices","margin","minWidth","name","address","routing","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.44f9538c.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Toolbar,IconButton, Grid, Button } from \"@material-ui/core\"; //tslint:disable-line\nimport useDarkMode from \"use-dark-mode\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport \"./NavBar.css\";\n\nconst NavBar: React.FC = () => {\n  const darkMode = useDarkMode();\n\n  return (\n    <AppBar position=\"sticky\" color=\"default\" elevation={0}>\n      <Toolbar>\n        <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"space-between\">\n          <Grid item style={{padding: \"10px\"}}>\n            <Link to=\"/Home\"><Button>Home</Button></Link>\n            <Link to=\"/ScanDevices\"><Button>Scan</Button></Link>\n            <Link to=\"/ViewDevice\"><Button>Device 1</Button></Link>\n            <IconButton onClick={darkMode.toggle}>\n              {darkMode.value ? <Brightness3Icon /> : <WbSunnyIcon />}\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { MuiThemeProvider, Typography, CssBaseline, Grid } from \"@material-ui/core\"; //tslint:disable-line\nimport useDarkMode from \"use-dark-mode\";\nimport { lightTheme, darkTheme } from \"../../themes/theme\";\nimport NavBar from \"../NavBar/NavBar\"\nimport \"./Home.css\";\n\nconst Home: React.FC = () => {\n  const darkMode = useDarkMode();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <NavBar />\n      <div>\n        <CssBaseline />\n        <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"center\" direction=\"column\">\n          <div style={{padding: \"10px\"}}>\n            <Typography>\n              Welcome to the Monitor\n            </Typography>\n            <hr/>\n            <Typography>\n              Please us the menu to either scan for your thingy devices and add them to the app or to view stats for a already added device.\n            </Typography>\n          </div>\n          <div>\n          </div>\n        </Grid>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default Home;\n","import ThingyApi from \"openrpcthingy\";\n\nexport const thingyHTTPSapi = new ThingyApi({\n  transport: {\n    type: \"https\",\n    host: \"192.168.1.105\",\n    port: 4442,\n  },\n});\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { MuiThemeProvider, CssBaseline, Grid } from \"@material-ui/core\"; //tslint:disable-line\nimport useDarkMode from \"use-dark-mode\";\nimport {thingyHTTPSapi} from \"../../api/api\"\nimport { lightTheme, darkTheme } from \"../../themes/theme\";\nimport NavBar from \"../NavBar/NavBar\"\nimport \"./ViewDevice.css\";\n\nconst ViewDevice: React.FC = () => {\n  const darkMode = useDarkMode();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  const [temp, setTemp ] = useState<any>();\n  const [humid, setHumid ] = useState<any>();\n  const [battery, setBattery] = useState<any>();\n\n  const getSensorData = async() =>{\n    console.log(\"getting sensor data\");\n    \n    const batteryResult: any = await thingyHTTPSapi.getSensorData(\"e5:b6:7f:eb:a0:dd\", \"battery\");\n    const batteryDataResult: any = JSON.parse(batteryResult);\n    setBattery(batteryDataResult);\n    \n    const tempResult: any = await thingyHTTPSapi.getSensorData(\"e5:b6:7f:eb:a0:dd\", \"temp\");\n    const tempDataResult: any = JSON.parse(tempResult);\n    setTemp(tempDataResult);\n    \n    const humidResult: any = await thingyHTTPSapi.getSensorData(\"e5:b6:7f:eb:a0:dd\", \"humid\")\n    const humidDataResult: any = JSON.parse(humidResult);\n    setHumid(humidDataResult);\n  }\n  useEffect(()=>{\n    getSensorData();\n    const refreshSensors = setInterval(() => getSensorData(), 20000);\n    return () => clearInterval(refreshSensors);\n  }, [])\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <NavBar />\n      <div>\n        <CssBaseline />\n        <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"center\" direction=\"column\">\n          <div>\n              <div>{temp &&  moment.unix(temp[0].date.ms).format(\"LLLL\")}</div>\n              <div>Temp: {temp ? (temp[0].sensor * 9/5 + 32).toFixed(2)+\"F\" : \"loading\"}</div>\n              <hr />\n          </div>\n          <div>\n              <div>{humid &&  moment.unix(humid[0].date.ms).format(\"LLLL\")}</div>\n              <div>Humid: {humid ? humid[0].sensor+\"%\": \"loading\"}</div>\n              <hr />\n          </div>\n          <div>\n              <div>{battery &&  moment.unix(battery[0].date.ms).format(\"LLLL\")}</div>\n              <div>Battery: {battery ? battery[0].sensor + \"v\": \"loading\" }</div>\n              <hr />\n          </div>      \n        </Grid>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default ViewDevice;\n","import React, {useEffect, useState} from \"react\";\nimport { MuiThemeProvider, Typography, CssBaseline, Grid } from \"@material-ui/core\"; //tslint:disable-line\nimport useDarkMode from \"use-dark-mode\";\nimport { lightTheme, darkTheme } from \"../../themes/theme\";\nimport NavBar from \"../NavBar/NavBar\"\nimport {thingyHTTPSapi} from \"../../api/api\"\nimport \"./ScanDevices.css\";\n\nconst ScanDevices: React.FC = () => {\n  const darkMode = useDarkMode();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  const [foundDevices, setFoundDevices ] = useState<any>();\n\n  const startScanDevices = async() =>{\n    console.log(\"---Scanning---\");\n    const scanResult: any = await thingyHTTPSapi.startScan();\n    console.log(scanResult);\n    setFoundDevices(scanResult);\n  };\n\n  useEffect(()=>{\n    startScanDevices();\n  }, [])\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <NavBar />\n      <div>\n        <CssBaseline />\n        <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"center\" direction=\"column\">\n          <div><Typography>Please select your thingy device/s</Typography></div>\n          <div>\n            {foundDevices ? foundDevices.map((devices: any)=>(\n            <div style={{margin:\"5px\"}}>\n                <button style={{minWidth:\"300px\"}}>\n                    <div>Name: {devices && devices.name}</div>\n                    <div>Mac: {devices && devices.address}</div>\n                </button>\n            </div>        \n            )):\"---Scanning---\"}\n          </div>\n        </Grid>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default ScanDevices;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"./containers/Home/Home\";\nimport ViewDevice from \"./containers/ViewDevice/ViewDevice\";\nimport ScanDevices from \"./containers/ScanDevices/ScanDevices\";\nconst routing = (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/Home\" />\n          )} />\n          <Route path=\"/Home\" component={Home} />\n          <Route path=\"/ViewDevice\" component={ViewDevice} />\n          <Route path=\"/ScanDevices\" component={ScanDevices} />\n        </Switch>\n      </HashRouter>\n  );\n  ReactDOM.render(routing, document.getElementById(\"root\"));\n"],"sourceRoot":""}